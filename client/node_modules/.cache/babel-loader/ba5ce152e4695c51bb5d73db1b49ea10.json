{"ast":null,"code":"import _defineProperty from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/src/components/LogInPage/LogInPage.js\";\nimport React, { Component } from 'react';\nimport Footer from '../Footer/Footer';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport adduser from \"../../assets/img/undraw_add_user_ipe3.svg\";\nimport FormValidator from '../FormValidator/FormValidator';\nimport LogInNavBar from '../LogInNavBar/LogInNavBar';\nimport './LogInPage.css';\n\nvar LogInPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogInPage, _Component);\n\n  function LogInPage(props) {\n    var _this;\n\n    _classCallCheck(this, LogInPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInPage).call(this, props));\n\n    _this.passwordMatch = function (confirmation, state) {\n      return state.password === confirmation;\n    };\n\n    _this.handleInputChange = function (event) {\n      event.preventDefault();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      var refreshPage = function refreshPage(timeoutPeriod) {\n        var refresh = \"location.reload(true)\";\n        setTimeout(refresh, timeoutPeriod);\n      };\n\n      var validation = _this.validator.validate(_this.state);\n\n      _this.setState({\n        validation: validation\n      });\n\n      _this.submitted = true;\n\n      if (validation.isValid) {\n        // handle actual form submission here\n        _this.setState({\n          successmessage: 'Logged In successfully',\n          errormessage: '',\n          toDashboard: true\n        });\n\n        alert('Logged In successfully');\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }); // refreshPage(5000);\n      } else {\n        _this.setState({\n          errormessage: 'Cannot Log In User Make sure all fields are correctly filled',\n          successmessage: ''\n        }); // alert('Cannot Log In Make sure all fields are correctly filled')\n\n      }\n    };\n\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validator = new FormValidator([{\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Email is required'\n    }, {\n      field: 'email',\n      method: 'isEmail',\n      validWhen: true,\n      message: 'That is not a valid email.'\n    }, {\n      field: 'password',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Password is required'\n    }]);\n    _this.state = {\n      email: '',\n      password: '',\n      validation: _this.validator.valid(),\n      successmessage: '',\n      errormessage: '',\n      toDashboard: false\n    };\n    _this.submitted = false;\n    return _this;\n  }\n\n  _createClass(LogInPage, [{\n    key: \"render\",\n    value: function render() {\n      var validation = this.submitted ? // if the form has been submitted at least once\n      this.validator.validate(this.state) : // then check validity every time we render\n      this.state.validation;\n\n      if (this.state.toDashboard === true) {\n        return React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(LogInNavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 svg-img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: adduser,\n        className: \"img-fluid\",\n        alt: \"timeoffImg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm-6 form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"err-success text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.errormessage), React.createElement(\"h2\", {\n        className: \"err-success text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.successmessage), React.createElement(\"form\", {\n        action: \"\",\n        method: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"form-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Log In\")), React.createElement(\"div\", {\n        className: \"form-group {validation.lastname.isInvalid && 'has-error'}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Employee Email\"), React.createElement(\"input\", {\n        onChange: this.handleInputChange,\n        type: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, validation.email.message)), React.createElement(\"div\", {\n        className: \"form-group {validation.password.isInvalid && 'has-error'}\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.handleInputChange,\n        name: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"help-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, validation.password.message)), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleFormSubmit,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"LOGIN\")), React.createElement(\"div\", {\n        className: \"text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"registered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \" \", React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Forgot Password?\"))))))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogInPage;\n}(Component);\n\nexport default LogInPage;","map":{"version":3,"sources":["/home/oyewoas/Documents/Software Dev Learning/With Companies/LevelUp Academy/Software Dev Projects/github/levelup-timeoffapp/src/components/LogInPage/LogInPage.js"],"names":["React","Component","Footer","Redirect","Link","FormValidator","LogInNavBar","LogInPage","props","passwordMatch","confirmation","state","password","handleInputChange","event","preventDefault","setState","target","name","value","handleFormSubmit","refreshPage","timeoutPeriod","refresh","setTimeout","validation","validator","validate","submitted","isValid","successmessage","errormessage","toDashboard","alert","bind","field","method","validWhen","message","email","valid","adduser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Footer from '../Footer/Footer'\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom'\nimport adduser from '../../assets/img/undraw_add_user_ipe3.svg'\nimport FormValidator from '../FormValidator/FormValidator'\nimport LogInNavBar from '../LogInNavBar/LogInNavBar'\nimport './LogInPage.css'\n\nclass LogInPage extends Component {\n    constructor(props){\n        super(props);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.validator = new FormValidator([\n    { \n      field: 'email', \n      method: 'isEmpty', \n      validWhen: false, \n      message: 'Email is required' \n    },\n    { \n      field: 'email',\n      method: 'isEmail', \n      validWhen: true, \n      message: 'That is not a valid email.'\n    },\n    { \n      field: 'password', \n      method: 'isEmpty', \n      validWhen: false, \n      message: 'Password is required'\n    },\n]);\n\n  this.state = {\n    email: '',\n    password: '',\n    validation: this.validator.valid(),\n    successmessage: '',\n    errormessage: '',\n    toDashboard: false,\n  }\n\n  this.submitted = false\n\n  \n\n\n\n}\n\npasswordMatch = (confirmation, state) => (state.password === confirmation)\n\nhandleInputChange = event => {\n    event.preventDefault();\n\n    this.setState({\n        [event.target.name]: event.target.value,\n    });\n}\n\n\n\nhandleFormSubmit = event => {\nevent.preventDefault();\n\nconst refreshPage = (timeoutPeriod) => {\n    let refresh = \"location.reload(true)\";\n\tsetTimeout( refresh ,timeoutPeriod);\n}\nconst validation = this.validator.validate(this.state);\nthis.setState({ validation });\nthis.submitted = true;\n\nif (validation.isValid) {\n// handle actual form submission here\nthis.setState({\n    successmessage: 'Logged In successfully', errormessage: '', toDashboard: true\n})\n\nalert('Logged In successfully')\nreturn <Redirect to=\"/dashboard\" />;\n// refreshPage(5000);\n            \n} else {\n    this.setState({\n        errormessage: 'Cannot Log In User Make sure all fields are correctly filled', successmessage: ''\n    })\n    // alert('Cannot Log In Make sure all fields are correctly filled')\n}\n}\n\n    render(){\n        let validation = this.submitted ?                         // if the form has been submitted at least once\n        this.validator.validate(this.state) :   // then check validity every time we render\n        this.state.validation \n\n        if (this.state.toDashboard === true) {\n            return <Redirect to='/dashboard' />\n          }\n        return(\n            <div>\n                <LogInNavBar/>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                    <div className=\"col-sm-6 svg-img\">\n                        <img src={adduser} className=\"img-fluid\" alt=\"timeoffImg\"/>\n                    </div>\n                    <div className=\"col-sm-6 form\">\n                    <h2 className=\"err-success text-center\">{this.state.errormessage}</h2>\n\t\t\t\t\t<h2 className=\"err-success text-center\">{this.state.successmessage}</h2>\n                    <form action=\"\" method=\"\">\n                        <div className=\"text-center\">\n                            <h5 className=\"form-header\">Log In</h5>\n                        </div>\n                        \n                        <div className=\"form-group {validation.lastname.isInvalid && 'has-error'}\">\n                            <label htmlFor=\"email\">Employee Email</label>\n                            <input onChange={this.handleInputChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter email\" />\n                            <span className=\"help-block\">{validation.email.message}</span>\n                        \n                        </div>\n                        <div className=\"form-group {validation.password.isInvalid && 'has-error'}\">\n                            <label htmlFor=\"password\">Password</label>\n                            <input type=\"password\"  onChange={this.handleInputChange} name=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" />\n                            <span className=\"help-block\">{validation.password.message}</span>\n                        \n                        </div>\n                        <div className=\"text-center\">\n\n                            <button onClick={this.handleFormSubmit} className=\"btn btn-primary\">LOGIN</button>\n                        </div>\n                        <div className=\"text-right\">\n                            <p className=\"registered\"> <Link to=\"/login\">Forgot Password?</Link></p>\n                        </div>\n                    </form>\n                    </div>\n                    </div>\n                    </div>\n                    <Footer/>\n                    </div>\n        )\n    }\n}\n\nexport default LogInPage;"]},"metadata":{},"sourceType":"module"}